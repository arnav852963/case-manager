import PDFDocument from "pdfkit";
import fs from "fs";
import path from "path";
import { mkdirp } from "mkdirp";

export const generateInvoice = async (payment, user, caseData) => {
    const invoiceDir = path.resolve("uploads/invoices");
    await mkdirp(invoiceDir);

    const invoicePath = path.join(invoiceDir, `invoice-${payment.id}.pdf`);

    const doc = new PDFDocument({ margin: 50 });
    const writeStream = fs.createWriteStream(invoicePath);
    doc.pipe(writeStream);

    doc
        .fontSize(20)
        .text("Case Management System", { align: "center" })
        .moveDown(0.5)
        .fontSize(14)
        .text("Invoice", { align: "center" })
        .moveDown();

    doc
        .fontSize(12)
        .text(`Invoice ID: ${payment.id}`)
        .text(`Date: ${new Date(payment.createdAt).toLocaleDateString()}`)
        .moveDown()
        .text(`Billed To: ${user.username} (${user.email})`)
        .text(`Case ID: ${caseData.id}`)
        .text(`Case Description: ${caseData.description}`)
        .moveDown();


    doc
        .fontSize(12)
        .text("Payment Details", { underline: true })
        .moveDown(0.5)
        .text(`Payment Method: ${payment.paymentMethod}`)
        .text(`Transaction ID: ${payment.transactionId || "N/A"}`)
        .text(`Amount: â‚¹${payment.amount}`)
        .text(`Status: ${payment.status}`)
        .moveDown(2);

    // --- FOOTER ---
    doc
        .fontSize(10)
        .text("Thank you for your payment!", { align: "center" })
        .text("Generated by Case Management System", { align: "center" });

    doc.end();


    await new Promise((resolve, reject) => {
        writeStream.on("finish", resolve);
        writeStream.on("error", reject);
    });

    return invoicePath;
};
